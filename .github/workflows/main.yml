# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the dev branch
on:
  # manual execution
  workflow_dispatch:
  # trigger workflow when this file is update. It will be updated with new version of app below
  push:
      paths: 
      - '.github/workflows/main.yml'
  #pull_request:
  #  branches: [ dev ]

env:
  DEBIAN_VERSION: 0.13

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "debian-build"
  debian-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Build deb package
      run: bash create_deb.sh ${{ env.DEBIAN_VERSION }}

    # Upload artifacts to Github
    # - uses: actions/upload-artifact@v2
    #   with:
    #       name: dalyinski-0.13
    #       path: dalyinski-0.13.deb
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: v${{ env.DEBIAN_VERSION }}
          release_name: Release v${{ env.DEBIAN_VERSION }}
          draft: false
          prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dalyinski-v${{ env.DEBIAN_VERSION }}.deb
          asset_name: dalyinski-v${{ env.DEBIAN_VERSION }}.deb
          asset_content_type: application/vnd.debian.binary-package


 
